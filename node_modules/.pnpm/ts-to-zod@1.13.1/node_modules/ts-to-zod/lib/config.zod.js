"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tsToZodConfigSchema = exports.configsSchema = exports.configSchema = exports.jSDocTagFilterSchema = exports.nameFilterSchema = exports.getSchemaNameSchema = exports.simplifiedJSDocTagSchema = void 0;
// Generated by ts-to-zod
const zod_1 = require("zod");
exports.simplifiedJSDocTagSchema = zod_1.z.object({
    name: zod_1.z.string(),
    value: zod_1.z.string().optional(),
});
exports.getSchemaNameSchema = zod_1.z
    .function()
    .args(zod_1.z.string())
    .returns(zod_1.z.string());
exports.nameFilterSchema = zod_1.z
    .function()
    .args(zod_1.z.string())
    .returns(zod_1.z.boolean());
exports.jSDocTagFilterSchema = zod_1.z
    .function()
    .args(zod_1.z.array(exports.simplifiedJSDocTagSchema))
    .returns(zod_1.z.boolean());
exports.configSchema = zod_1.z.object({
    input: zod_1.z.string(),
    output: zod_1.z.string(),
    skipValidation: zod_1.z.boolean().optional(),
    maxRun: zod_1.z.number().optional(),
    nameFilter: exports.nameFilterSchema.optional(),
    jsDocTagFilter: exports.jSDocTagFilterSchema.optional(),
    getSchemaName: exports.getSchemaNameSchema.optional(),
    keepComments: zod_1.z.boolean().optional().default(false),
    skipParseJSDoc: zod_1.z.boolean().optional().default(false),
});
exports.configsSchema = zod_1.z.array(exports.configSchema.and(zod_1.z.object({
    name: zod_1.z.string(),
})));
exports.tsToZodConfigSchema = zod_1.z.union([exports.configSchema, exports.configsSchema]);
//# sourceMappingURL=config.zod.js.map